<?php

/**
 * BasePaymentData
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $payment_id
 * @property string $method_class_name
 * @property string $subject
 * @property string $internal_reference_number
 * @property string $external_reference_number
 * @property string $bank_country
 * @property string $bank_code
 * @property string $account_holder
 * @property string $account_number
 * @property string $project
 * @property string $project_campaign
 * @property string $payment_text
 * @property string $ip
 * @property string $express_token
 * @property string $express_url
 * @property string $cancel_url
 * @property string $return_url
 * @property string $payer_id
 * @property Payment $Payment
 * 
 * @method integer     getPaymentId()                 Returns the current record's "payment_id" value
 * @method string      getMethodClassName()           Returns the current record's "method_class_name" value
 * @method string      getSubject()                   Returns the current record's "subject" value
 * @method string      getInternalReferenceNumber()   Returns the current record's "internal_reference_number" value
 * @method string      getExternalReferenceNumber()   Returns the current record's "external_reference_number" value
 * @method string      getBankCountry()               Returns the current record's "bank_country" value
 * @method string      getBankCode()                  Returns the current record's "bank_code" value
 * @method string      getAccountHolder()             Returns the current record's "account_holder" value
 * @method string      getAccountNumber()             Returns the current record's "account_number" value
 * @method string      getProject()                   Returns the current record's "project" value
 * @method string      getProjectCampaign()           Returns the current record's "project_campaign" value
 * @method string      getPaymentText()               Returns the current record's "payment_text" value
 * @method string      getIp()                        Returns the current record's "ip" value
 * @method string      getExpressToken()              Returns the current record's "express_token" value
 * @method string      getExpressUrl()                Returns the current record's "express_url" value
 * @method string      getCancelUrl()                 Returns the current record's "cancel_url" value
 * @method string      getReturnUrl()                 Returns the current record's "return_url" value
 * @method string      getPayerId()                   Returns the current record's "payer_id" value
 * @method Payment     getPayment()                   Returns the current record's "Payment" value
 * @method PaymentData setPaymentId()                 Sets the current record's "payment_id" value
 * @method PaymentData setMethodClassName()           Sets the current record's "method_class_name" value
 * @method PaymentData setSubject()                   Sets the current record's "subject" value
 * @method PaymentData setInternalReferenceNumber()   Sets the current record's "internal_reference_number" value
 * @method PaymentData setExternalReferenceNumber()   Sets the current record's "external_reference_number" value
 * @method PaymentData setBankCountry()               Sets the current record's "bank_country" value
 * @method PaymentData setBankCode()                  Sets the current record's "bank_code" value
 * @method PaymentData setAccountHolder()             Sets the current record's "account_holder" value
 * @method PaymentData setAccountNumber()             Sets the current record's "account_number" value
 * @method PaymentData setProject()                   Sets the current record's "project" value
 * @method PaymentData setProjectCampaign()           Sets the current record's "project_campaign" value
 * @method PaymentData setPaymentText()               Sets the current record's "payment_text" value
 * @method PaymentData setIp()                        Sets the current record's "ip" value
 * @method PaymentData setExpressToken()              Sets the current record's "express_token" value
 * @method PaymentData setExpressUrl()                Sets the current record's "express_url" value
 * @method PaymentData setCancelUrl()                 Sets the current record's "cancel_url" value
 * @method PaymentData setReturnUrl()                 Sets the current record's "return_url" value
 * @method PaymentData setPayerId()                   Sets the current record's "payer_id" value
 * @method PaymentData setPayment()                   Sets the current record's "Payment" value
 * 
 * @package    up2green
 * @subpackage model
 * @author     ClÃ©ment Gautier
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BasePaymentData extends sfDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('payment_data');
        $this->hasColumn('payment_id', 'integer', 11, array(
             'primary' => true,
             'type' => 'integer',
             'unsigned' => true,
             'notnull' => false,
             'length' => 11,
             ));
        $this->hasColumn('method_class_name', 'string', 100, array(
             'type' => 'string',
             'notnull' => true,
             'comment' => 'The class name of the payment method that this data represents.',
             'length' => 100,
             ));
        $this->hasColumn('subject', 'string', 255, array(
             'type' => 'string',
             'notnull' => true,
             'comment' => 'The subject that is displayed to the client in the given locale.',
             'length' => 255,
             ));
        $this->hasColumn('internal_reference_number', 'string', 255, array(
             'type' => 'string',
             'notnull' => false,
             'comment' => 'This is purely optional, and can be used by the payment method class internally (e.g. PayPalPaymentMethod).',
             'length' => 255,
             ));
        $this->hasColumn('external_reference_number', 'string', 255, array(
             'type' => 'string',
             'notnull' => false,
             'comment' => 'This is a reference number generated by the actual payment method provider (e.g. PayPal itself).',
             'length' => 255,
             ));
        $this->hasColumn('bank_country', 'string', 2, array(
             'type' => 'string',
             'notnull' => true,
             'length' => 2,
             ));
        $this->hasColumn('bank_code', 'string', 255, array(
             'type' => 'string',
             'notnull' => true,
             'length' => 255,
             ));
        $this->hasColumn('account_holder', 'string', 255, array(
             'type' => 'string',
             'notnull' => true,
             'length' => 255,
             ));
        $this->hasColumn('account_number', 'string', 255, array(
             'type' => 'string',
             'notnull' => true,
             'length' => 255,
             ));
        $this->hasColumn('project', 'string', 255, array(
             'type' => 'string',
             'notnull' => false,
             'length' => 255,
             ));
        $this->hasColumn('project_campaign', 'string', 255, array(
             'type' => 'string',
             'notnull' => false,
             'length' => 255,
             ));
        $this->hasColumn('payment_text', 'string', 255, array(
             'type' => 'string',
             'notnull' => false,
             'length' => 255,
             ));
        $this->hasColumn('ip', 'string', 15, array(
             'type' => 'string',
             'notnull' => false,
             'length' => 15,
             ));
        $this->hasColumn('express_token', 'string', 30, array(
             'type' => 'string',
             'notnull' => false,
             'length' => 30,
             ));
        $this->hasColumn('express_url', 'string', 2048, array(
             'type' => 'string',
             'notnull' => false,
             'length' => 2048,
             ));
        $this->hasColumn('cancel_url', 'string', 2048, array(
             'type' => 'string',
             'notnull' => true,
             'length' => 2048,
             ));
        $this->hasColumn('return_url', 'string', 2048, array(
             'type' => 'string',
             'notnull' => true,
             'length' => 2048,
             ));
        $this->hasColumn('payer_id', 'string', 255, array(
             'type' => 'string',
             'notnull' => false,
             'length' => 255,
             ));

        $this->option('type', 'InnoDB');
        $this->option('charset', 'utf8');
        $this->option('collate', 'utf8_unicode_ci');

        $this->setSubClasses(array(
             'MicropaymentDebitPaymentData' => 
             array(
              'method_class_name' => 'jmsMicropaymentDebitPaymentMethod',
             ),
             'PaypalPaymentData' => 
             array(
              'method_class_name' => 'jmsPaypalPaymentMethod',
             ),
             ));
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasOne('Payment', array(
             'local' => 'payment_id',
             'foreign' => 'id'));

        $timestampable0 = new Doctrine_Template_Timestampable();
        $this->actAs($timestampable0);
    }
}