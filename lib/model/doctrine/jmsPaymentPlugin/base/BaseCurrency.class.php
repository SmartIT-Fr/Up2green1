<?php

/**
 * BaseCurrency
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $id
 * @property string $code
 * @property decimal $rate
 * @property Doctrine_Collection $engine
 * 
 * @method integer             getId()     Returns the current record's "id" value
 * @method string              getCode()   Returns the current record's "code" value
 * @method decimal             getRate()   Returns the current record's "rate" value
 * @method Doctrine_Collection getEngine() Returns the current record's "engine" collection
 * @method Currency            setId()     Sets the current record's "id" value
 * @method Currency            setCode()   Sets the current record's "code" value
 * @method Currency            setRate()   Sets the current record's "rate" value
 * @method Currency            setEngine() Sets the current record's "engine" collection
 * 
 * @package    up2green
 * @subpackage model
 * @author     ClÃ©ment Gautier
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BaseCurrency extends sfDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('currencies');
        $this->hasColumn('id', 'integer', 11, array(
             'type' => 'integer',
             'primary' => true,
             'autoincrement' => true,
             'unsigned' => true,
             'length' => 11,
             ));
        $this->hasColumn('code', 'string', 3, array(
             'type' => 'string',
             'notnull' => true,
             'unique' => true,
             'length' => 3,
             ));
        $this->hasColumn('rate', 'decimal', null, array(
             'type' => 'decimal',
             'scale' => 7,
             'comment' => 'This rate is relative to the euro; basically it says what amount 1 EUR equals in this currency.',
             ));

        $this->option('type', 'InnoDB');
        $this->option('charset', 'utf8');
        $this->option('collate', 'utf8_unicode_ci');
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasMany('engine', array(
             'local' => 'id',
             'foreign' => 'currency_id'));

        $timestampable0 = new Doctrine_Template_Timestampable(array(
             'created' => 
             array(
              'disabled' => true,
             ),
             ));
        $versionable0 = new Doctrine_Template_Versionable(array(
             'auditLog' => true,
             'deleteVersions' => false,
             ));
        $this->actAs($timestampable0);
        $this->actAs($versionable0);
    }
}