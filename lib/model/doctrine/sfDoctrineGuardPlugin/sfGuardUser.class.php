<?php

/**
 * sfGuardUser
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @package    up2green
 * @subpackage model
 * @author     Your name here
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
class sfGuardUser extends PluginsfGuardUser
{
  public function setPassword($password)
  {
    if (!$password && 0 == strlen($password))
    {
      return;
    }

    $fromdump = false;
    if($this->isNew() && $this->getSalt()){
     $fromdump=true;
    }

    if (!$salt = $this->getSalt())
    {
      $salt = md5(rand(100000, 999999).$this->getUsername());
      $this->setSalt($salt);
    }
    $modified = $this->getModified();
    if ((!$algorithm = $this->getAlgorithm()) || (isset($modified['algorithm']) && $modified['algorithm'] == $this->getTable()->getDefaultValueOf('algorithm')))
    {
      $algorithm = sfConfig::get('app_sf_guard_plugin_algorithm_callable', 'sha1');
    }
    $algorithmAsStr = is_array($algorithm) ? $algorithm[0].'::'.$algorithm[1] : $algorithm;
    if (!is_callable($algorithm))
    {
      throw new sfException(sprintf('The algorithm callable "%s" is not callable.', $algorithmAsStr));
    }
    $this->setAlgorithm($algorithmAsStr);

    if($fromdump){
     parent::_set('password',$password);
    }
    else{
     parent::_set('password', call_user_func_array($algorithm, array($salt.$password)));
    }

  }
  
  public function countTrees() {
  	return sizeof($this->getTrees());
	}
	
  public function countFilleul() {
  	return Doctrine_Core::getTable('filleul')
						->addQuery()
						->where("user_id = ?", $this->getId())
						->count();
	}
  
  public function getDisplayName() {
		$prenom = $this->getFirstName();
		$nom = $this->getLastName();
  	return (empty($prenom) && empty($nom)) ? $this->getEmailAddress() : $prenom.' '.$nom;
	}
	
  public function getFullName() {
		$prenom = $this->getFirstName();
		$nom = $this->getLastName();
  	return $prenom.(empty($nom) ? '' : $nom);
	}
	
  public function getTotalGain() {
		$usedCredit = Doctrine_Core::getTable('treeUser')->countByUser($this->getId()) * sfConfig::get('app_prix_arbre');						
		return $this->getProfile()->getCredit() + $usedCredit;
	}
	
	public function generateCoupon(couponGen $couponGen) {
		$num = couponTable::getNumUnused($prefix);
		
		$coupon = new coupon();
		$coupon->setCouponGen($couponGen);
		$coupon->setCode($num);
		$coupon->save();

		$jointure = new couponUser();
		$jointure->setUser($this);
		$jointure->setCoupon($coupon);
		$jointure->save();

		return $num;
	}
	
}
