<?php

/**
 * BasenewsletterCategory
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $category_id
 * @property integer $newsletter_id
 * @property category $category
 * @property newsletter $newsletter
 * 
 * @method integer            getCategoryId()    Returns the current record's "category_id" value
 * @method integer            getNewsletterId()  Returns the current record's "newsletter_id" value
 * @method category           getCategory()      Returns the current record's "category" value
 * @method newsletter         getNewsletter()    Returns the current record's "newsletter" value
 * @method newsletterCategory setCategoryId()    Sets the current record's "category_id" value
 * @method newsletterCategory setNewsletterId()  Sets the current record's "newsletter_id" value
 * @method newsletterCategory setCategory()      Sets the current record's "category" value
 * @method newsletterCategory setNewsletter()    Sets the current record's "newsletter" value
 * 
 * @package    up2green
 * @subpackage model
 * @author     ClÃ©ment Gautier
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BasenewsletterCategory extends sfDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('newsletter_category');
        $this->hasColumn('category_id', 'integer', 4, array(
             'type' => 'integer',
             'primary' => true,
             'length' => 4,
             ));
        $this->hasColumn('newsletter_id', 'integer', 4, array(
             'type' => 'integer',
             'primary' => true,
             'length' => 4,
             ));

        $this->option('symfony', array(
             'form' => false,
             'filter' => false,
             ));
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasOne('category', array(
             'local' => 'category_id',
             'foreign' => 'id',
             'onDelete' => 'CASCADE'));

        $this->hasOne('newsletter', array(
             'local' => 'newsletter_id',
             'foreign' => 'id',
             'onDelete' => 'CASCADE'));
    }
}