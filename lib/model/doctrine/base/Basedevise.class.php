<?php

/**
 * Basedevise
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $id
 * @property string $unique_name
 * @property double $conversion
 * @property Doctrine_Collection $engine
 * 
 * @method integer             getId()          Returns the current record's "id" value
 * @method string              getUniqueName()  Returns the current record's "unique_name" value
 * @method double              getConversion()  Returns the current record's "conversion" value
 * @method Doctrine_Collection getEngine()      Returns the current record's "engine" collection
 * @method devise              setId()          Sets the current record's "id" value
 * @method devise              setUniqueName()  Sets the current record's "unique_name" value
 * @method devise              setConversion()  Sets the current record's "conversion" value
 * @method devise              setEngine()      Sets the current record's "engine" collection
 * 
 * @package    up2green
 * @subpackage model
 * @author     ClÃ©ment Gautier
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class Basedevise extends sfDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('devise');
        $this->hasColumn('id', 'integer', 4, array(
             'type' => 'integer',
             'primary' => true,
             'autoincrement' => true,
             'length' => 4,
             ));
        $this->hasColumn('unique_name', 'string', 30, array(
             'type' => 'string',
             'unique' => true,
             'length' => 30,
             ));
        $this->hasColumn('conversion', 'double', 18, array(
             'type' => 'double',
             'notnull' => true,
             'length' => 18,
             'scale' => '10',
             ));
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasMany('engine', array(
             'local' => 'id',
             'foreign' => 'id_devise'));

        $timestampable0 = new Doctrine_Template_Timestampable(array(
             ));
        $this->actAs($timestampable0);
    }
}