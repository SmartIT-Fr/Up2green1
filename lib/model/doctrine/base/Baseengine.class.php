<?php

/**
 * Baseengine
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $id
 * @property integer $id_category
 * @property integer $id_plateforme
 * @property integer $currency_id
 * @property string $site_display
 * @property string $site_url
 * @property clob $html
 * @property clob $logo
 * @property clob $description
 * @property enum $remun_type
 * @property float $remun_min
 * @property float $remun_max
 * @property boolean $safe_search_only
 * @property boolean $is_active
 * @property Currency $Currency
 * @property affiliatePlateforme $plateforme
 * @property category $category
 * @property Doctrine_Collection $engineTag
 * 
 * @method integer             getId()               Returns the current record's "id" value
 * @method integer             getIdCategory()       Returns the current record's "id_category" value
 * @method integer             getIdPlateforme()     Returns the current record's "id_plateforme" value
 * @method integer             getCurrencyId()       Returns the current record's "currency_id" value
 * @method string              getSiteDisplay()      Returns the current record's "site_display" value
 * @method string              getSiteUrl()          Returns the current record's "site_url" value
 * @method clob                getHtml()             Returns the current record's "html" value
 * @method clob                getLogo()             Returns the current record's "logo" value
 * @method clob                getDescription()      Returns the current record's "description" value
 * @method enum                getRemunType()        Returns the current record's "remun_type" value
 * @method float               getRemunMin()         Returns the current record's "remun_min" value
 * @method float               getRemunMax()         Returns the current record's "remun_max" value
 * @method boolean             getSafeSearchOnly()   Returns the current record's "safe_search_only" value
 * @method boolean             getIsActive()         Returns the current record's "is_active" value
 * @method Currency            getCurrency()         Returns the current record's "Currency" value
 * @method affiliatePlateforme getPlateforme()       Returns the current record's "plateforme" value
 * @method category            getCategory()         Returns the current record's "category" value
 * @method Doctrine_Collection getEngineTag()        Returns the current record's "engineTag" collection
 * @method engine              setId()               Sets the current record's "id" value
 * @method engine              setIdCategory()       Sets the current record's "id_category" value
 * @method engine              setIdPlateforme()     Sets the current record's "id_plateforme" value
 * @method engine              setCurrencyId()       Sets the current record's "currency_id" value
 * @method engine              setSiteDisplay()      Sets the current record's "site_display" value
 * @method engine              setSiteUrl()          Sets the current record's "site_url" value
 * @method engine              setHtml()             Sets the current record's "html" value
 * @method engine              setLogo()             Sets the current record's "logo" value
 * @method engine              setDescription()      Sets the current record's "description" value
 * @method engine              setRemunType()        Sets the current record's "remun_type" value
 * @method engine              setRemunMin()         Sets the current record's "remun_min" value
 * @method engine              setRemunMax()         Sets the current record's "remun_max" value
 * @method engine              setSafeSearchOnly()   Sets the current record's "safe_search_only" value
 * @method engine              setIsActive()         Sets the current record's "is_active" value
 * @method engine              setCurrency()         Sets the current record's "Currency" value
 * @method engine              setPlateforme()       Sets the current record's "plateforme" value
 * @method engine              setCategory()         Sets the current record's "category" value
 * @method engine              setEngineTag()        Sets the current record's "engineTag" collection
 * 
 * @package    up2green
 * @subpackage model
 * @author     ClÃ©ment Gautier
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class Baseengine extends sfDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('engine');
        $this->hasColumn('id', 'integer', 4, array(
             'type' => 'integer',
             'primary' => true,
             'autoincrement' => true,
             'length' => 4,
             ));
        $this->hasColumn('id_category', 'integer', 4, array(
             'type' => 'integer',
             'notnull' => true,
             'length' => 4,
             ));
        $this->hasColumn('id_plateforme', 'integer', 4, array(
             'type' => 'integer',
             'notnull' => true,
             'length' => 4,
             ));
        $this->hasColumn('currency_id', 'integer', 11, array(
             'type' => 'integer',
             'notnull' => true,
             'default' => 34,
             'unsigned' => true,
             'length' => 11,
             ));
        $this->hasColumn('site_display', 'string', 128, array(
             'type' => 'string',
             'notnull' => true,
             'length' => 128,
             ));
        $this->hasColumn('site_url', 'string', 128, array(
             'type' => 'string',
             'notnull' => true,
             'length' => 128,
             ));
        $this->hasColumn('html', 'clob', null, array(
             'type' => 'clob',
             ));
        $this->hasColumn('logo', 'clob', null, array(
             'type' => 'clob',
             ));
        $this->hasColumn('description', 'clob', null, array(
             'type' => 'clob',
             ));
        $this->hasColumn('remun_type', 'enum', null, array(
             'type' => 'enum',
             'values' => 
             array(
              0 => 'number',
              1 => 'pourcent',
              2 => 'price',
             ),
             'default' => 'number',
             ));
        $this->hasColumn('remun_min', 'float', null, array(
             'type' => 'float',
             'notnull' => true,
             'default' => 0,
             ));
        $this->hasColumn('remun_max', 'float', null, array(
             'type' => 'float',
             'notnull' => true,
             ));
        $this->hasColumn('safe_search_only', 'boolean', null, array(
             'type' => 'boolean',
             'default' => 0,
             ));
        $this->hasColumn('is_active', 'boolean', null, array(
             'type' => 'boolean',
             'default' => 1,
             ));
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasOne('Currency', array(
             'local' => 'currency_id',
             'foreign' => 'id'));

        $this->hasOne('affiliatePlateforme as plateforme', array(
             'local' => 'id_plateforme',
             'foreign' => 'id'));

        $this->hasOne('category', array(
             'local' => 'id_category',
             'foreign' => 'id'));

        $this->hasMany('engineTag', array(
             'local' => 'id',
             'foreign' => 'engine_id'));

        $timestampable0 = new Doctrine_Template_Timestampable(array(
             ));
        $this->actAs($timestampable0);
    }
}