<?php

/**
 * Basetag
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $id
 * @property string $label
 * @property integer $rank
 * @property boolean $is_active
 * @property Doctrine_Collection $engineTag
 * 
 * @method integer             getId()        Returns the current record's "id" value
 * @method string              getLabel()     Returns the current record's "label" value
 * @method integer             getRank()      Returns the current record's "rank" value
 * @method boolean             getIsActive()  Returns the current record's "is_active" value
 * @method Doctrine_Collection getEngineTag() Returns the current record's "engineTag" collection
 * @method tag                 setId()        Sets the current record's "id" value
 * @method tag                 setLabel()     Sets the current record's "label" value
 * @method tag                 setRank()      Sets the current record's "rank" value
 * @method tag                 setIsActive()  Sets the current record's "is_active" value
 * @method tag                 setEngineTag() Sets the current record's "engineTag" collection
 * 
 * @package    up2green
 * @subpackage model
 * @author     ClÃ©ment Gautier
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class Basetag extends sfDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('tag');
        $this->hasColumn('id', 'integer', 4, array(
             'type' => 'integer',
             'primary' => true,
             'autoincrement' => true,
             'length' => 4,
             ));
        $this->hasColumn('label', 'string', 255, array(
             'type' => 'string',
             'notnull' => true,
             'unique' => true,
             'length' => 255,
             ));
        $this->hasColumn('rank', 'integer', 4, array(
             'type' => 'integer',
             'notnull' => true,
             'default' => 0,
             'length' => 4,
             ));
        $this->hasColumn('is_active', 'boolean', null, array(
             'type' => 'boolean',
             'default' => 1,
             ));
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasMany('engineTag', array(
             'local' => 'id',
             'foreign' => 'tag_id'));

        $timestampable0 = new Doctrine_Template_Timestampable(array(
             ));
        $this->actAs($timestampable0);
    }
}