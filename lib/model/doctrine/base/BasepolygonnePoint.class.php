<?php

/**
 * BasepolygonnePoint
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $polygonne_id
 * @property integer $point_id
 * @property polygonne $polygonne
 * @property point $point
 * 
 * @method integer        getPolygonneId()  Returns the current record's "polygonne_id" value
 * @method integer        getPointId()      Returns the current record's "point_id" value
 * @method polygonne      getPolygonne()    Returns the current record's "polygonne" value
 * @method point          getPoint()        Returns the current record's "point" value
 * @method polygonnePoint setPolygonneId()  Sets the current record's "polygonne_id" value
 * @method polygonnePoint setPointId()      Sets the current record's "point_id" value
 * @method polygonnePoint setPolygonne()    Sets the current record's "polygonne" value
 * @method polygonnePoint setPoint()        Sets the current record's "point" value
 * 
 * @package    up2green
 * @subpackage model
 * @author     ClÃ©ment Gautier
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BasepolygonnePoint extends sfDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('polygonne_point');
        $this->hasColumn('polygonne_id', 'integer', 4, array(
             'type' => 'integer',
             'primary' => true,
             'length' => 4,
             ));
        $this->hasColumn('point_id', 'integer', 4, array(
             'type' => 'integer',
             'primary' => true,
             'length' => 4,
             ));

        $this->option('symfony', array(
             'form' => false,
             'filter' => false,
             ));
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasOne('polygonne', array(
             'local' => 'polygonne_id',
             'foreign' => 'id',
             'onDelete' => 'CASCADE'));

        $this->hasOne('point', array(
             'local' => 'point_id',
             'foreign' => 'id',
             'onDelete' => 'CASCADE'));
    }
}