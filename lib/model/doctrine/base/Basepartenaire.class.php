<?php

/**
 * Basepartenaire
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $id
 * @property bigint $user_id
 * @property string $title
 * @property clob $accroche
 * @property clob $description
 * @property clob $page
 * @property string $page_title
 * @property string $attestation
 * @property string $url
 * @property sfGuardUser $User
 * @property Doctrine_Collection $Coupons
 * @property Doctrine_Collection $Logos
 * @property Doctrine_Collection $Programmes
 * 
 * @method integer             getId()          Returns the current record's "id" value
 * @method bigint              getUserId()      Returns the current record's "user_id" value
 * @method string              getTitle()       Returns the current record's "title" value
 * @method clob                getAccroche()    Returns the current record's "accroche" value
 * @method clob                getDescription() Returns the current record's "description" value
 * @method clob                getPage()        Returns the current record's "page" value
 * @method string              getPageTitle()   Returns the current record's "page_title" value
 * @method string              getAttestation() Returns the current record's "attestation" value
 * @method string              getUrl()         Returns the current record's "url" value
 * @method sfGuardUser         getUser()        Returns the current record's "User" value
 * @method Doctrine_Collection getCoupons()     Returns the current record's "Coupons" collection
 * @method Doctrine_Collection getLogos()       Returns the current record's "Logos" collection
 * @method Doctrine_Collection getProgrammes()  Returns the current record's "Programmes" collection
 * @method partenaire          setId()          Sets the current record's "id" value
 * @method partenaire          setUserId()      Sets the current record's "user_id" value
 * @method partenaire          setTitle()       Sets the current record's "title" value
 * @method partenaire          setAccroche()    Sets the current record's "accroche" value
 * @method partenaire          setDescription() Sets the current record's "description" value
 * @method partenaire          setPage()        Sets the current record's "page" value
 * @method partenaire          setPageTitle()   Sets the current record's "page_title" value
 * @method partenaire          setAttestation() Sets the current record's "attestation" value
 * @method partenaire          setUrl()         Sets the current record's "url" value
 * @method partenaire          setUser()        Sets the current record's "User" value
 * @method partenaire          setCoupons()     Sets the current record's "Coupons" collection
 * @method partenaire          setLogos()       Sets the current record's "Logos" collection
 * @method partenaire          setProgrammes()  Sets the current record's "Programmes" collection
 * 
 * @package    up2green
 * @subpackage model
 * @author     ClÃ©ment Gautier
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class Basepartenaire extends sfDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('partenaire');
        $this->hasColumn('id', 'integer', 4, array(
             'type' => 'integer',
             'primary' => true,
             'autoincrement' => true,
             'length' => 4,
             ));
        $this->hasColumn('user_id', 'bigint', 20, array(
             'type' => 'bigint',
             'notnull' => true,
             'unique' => true,
             'length' => 20,
             ));
        $this->hasColumn('title', 'string', 4000, array(
             'type' => 'string',
             'length' => 4000,
             ));
        $this->hasColumn('accroche', 'clob', 65535, array(
             'type' => 'clob',
             'length' => 65535,
             ));
        $this->hasColumn('description', 'clob', 65535, array(
             'type' => 'clob',
             'length' => 65535,
             ));
        $this->hasColumn('page', 'clob', 65535, array(
             'type' => 'clob',
             'length' => 65535,
             ));
        $this->hasColumn('page_title', 'string', 255, array(
             'type' => 'string',
             'length' => 255,
             ));
        $this->hasColumn('attestation', 'string', 128, array(
             'type' => 'string',
             'length' => 128,
             ));
        $this->hasColumn('url', 'string', 150, array(
             'type' => 'string',
             'length' => 150,
             ));
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasOne('sfGuardUser as User', array(
             'local' => 'user_id',
             'foreign' => 'id',
             'onDelete' => 'CASCADE'));

        $this->hasMany('couponPartenaire as Coupons', array(
             'local' => 'id',
             'foreign' => 'partenaire_id'));

        $this->hasMany('partenaireLogo as Logos', array(
             'local' => 'id',
             'foreign' => 'partenaire_id'));

        $this->hasMany('partenaireProgramme as Programmes', array(
             'local' => 'id',
             'foreign' => 'partenaire_id'));

        $timestampable0 = new Doctrine_Template_Timestampable(array(
             ));
        $this->actAs($timestampable0);
    }
}