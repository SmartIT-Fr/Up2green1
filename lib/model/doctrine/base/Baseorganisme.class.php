<?php

/**
 * Baseorganisme
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $id
 * @property string $url
 * @property string $title
 * @property clob $accroche
 * @property clob $description
 * @property string $logo
 * @property boolean $is_active
 * @property organismePoint $Point
 * @property Doctrine_Collection $Programmes
 * 
 * @method integer             getId()          Returns the current record's "id" value
 * @method string              getUrl()         Returns the current record's "url" value
 * @method string              getTitle()       Returns the current record's "title" value
 * @method clob                getAccroche()    Returns the current record's "accroche" value
 * @method clob                getDescription() Returns the current record's "description" value
 * @method string              getLogo()        Returns the current record's "logo" value
 * @method boolean             getIsActive()    Returns the current record's "is_active" value
 * @method organismePoint      getPoint()       Returns the current record's "Point" value
 * @method Doctrine_Collection getProgrammes()  Returns the current record's "Programmes" collection
 * @method organisme           setId()          Sets the current record's "id" value
 * @method organisme           setUrl()         Sets the current record's "url" value
 * @method organisme           setTitle()       Sets the current record's "title" value
 * @method organisme           setAccroche()    Sets the current record's "accroche" value
 * @method organisme           setDescription() Sets the current record's "description" value
 * @method organisme           setLogo()        Sets the current record's "logo" value
 * @method organisme           setIsActive()    Sets the current record's "is_active" value
 * @method organisme           setPoint()       Sets the current record's "Point" value
 * @method organisme           setProgrammes()  Sets the current record's "Programmes" collection
 * 
 * @package    up2green
 * @subpackage model
 * @author     ClÃ©ment Gautier
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class Baseorganisme extends sfDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('organisme');
        $this->hasColumn('id', 'integer', 4, array(
             'type' => 'integer',
             'primary' => true,
             'autoincrement' => true,
             'length' => 4,
             ));
        $this->hasColumn('url', 'string', 128, array(
             'type' => 'string',
             'length' => 128,
             ));
        $this->hasColumn('title', 'string', 128, array(
             'type' => 'string',
             'length' => 128,
             ));
        $this->hasColumn('accroche', 'clob', 65535, array(
             'type' => 'clob',
             'length' => 65535,
             ));
        $this->hasColumn('description', 'clob', 65535, array(
             'type' => 'clob',
             'length' => 65535,
             ));
        $this->hasColumn('logo', 'string', 128, array(
             'type' => 'string',
             'length' => 128,
             ));
        $this->hasColumn('is_active', 'boolean', null, array(
             'type' => 'boolean',
             'default' => 1,
             ));
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasOne('organismePoint as Point', array(
             'local' => 'id',
             'foreign' => 'organisme_id'));

        $this->hasMany('programme as Programmes', array(
             'local' => 'id',
             'foreign' => 'organisme_id'));

        $timestampable0 = new Doctrine_Template_Timestampable();
        $i18n0 = new Doctrine_Template_I18n(array(
             'fields' => 
             array(
              0 => 'title',
              1 => 'accroche',
              2 => 'description',
             ),
             ));
        $sluggable1 = new Doctrine_Template_Sluggable(array(
             'fields' => 
             array(
              0 => 'title',
             ),
             'uniqueBy' => 
             array(
              0 => 'lang',
              1 => 'title',
             ),
             ));
        $i18n0->addChild($sluggable1);
        $this->actAs($timestampable0);
        $this->actAs($i18n0);
    }
}