<?php

/**
 * Basecategorie
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $id
 * @property string $unique_name
 * @property string $name
 * @property integer $parent_id
 * @property boolean $is_active
 * @property categorie $parent
 * @property Doctrine_Collection $children
 * @property Doctrine_Collection $lienCategorie
 * @property Doctrine_Collection $articleCategorie
 * @property Doctrine_Collection $newsletterCategorie
 * 
 * @method integer             getId()                  Returns the current record's "id" value
 * @method string              getUniqueName()          Returns the current record's "unique_name" value
 * @method string              getName()                Returns the current record's "name" value
 * @method integer             getParentId()            Returns the current record's "parent_id" value
 * @method boolean             getIsActive()            Returns the current record's "is_active" value
 * @method categorie           getParent()              Returns the current record's "parent" value
 * @method Doctrine_Collection getChildren()            Returns the current record's "children" collection
 * @method Doctrine_Collection getLienCategorie()       Returns the current record's "lienCategorie" collection
 * @method Doctrine_Collection getArticleCategorie()    Returns the current record's "articleCategorie" collection
 * @method Doctrine_Collection getNewsletterCategorie() Returns the current record's "newsletterCategorie" collection
 * @method categorie           setId()                  Sets the current record's "id" value
 * @method categorie           setUniqueName()          Sets the current record's "unique_name" value
 * @method categorie           setName()                Sets the current record's "name" value
 * @method categorie           setParentId()            Sets the current record's "parent_id" value
 * @method categorie           setIsActive()            Sets the current record's "is_active" value
 * @method categorie           setParent()              Sets the current record's "parent" value
 * @method categorie           setChildren()            Sets the current record's "children" collection
 * @method categorie           setLienCategorie()       Sets the current record's "lienCategorie" collection
 * @method categorie           setArticleCategorie()    Sets the current record's "articleCategorie" collection
 * @method categorie           setNewsletterCategorie() Sets the current record's "newsletterCategorie" collection
 * 
 * @package    up2green
 * @subpackage model
 * @author     ClÃ©ment Gautier
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class Basecategorie extends sfDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('categorie');
        $this->hasColumn('id', 'integer', 4, array(
             'type' => 'integer',
             'primary' => true,
             'autoincrement' => true,
             'length' => 4,
             ));
        $this->hasColumn('unique_name', 'string', 30, array(
             'type' => 'string',
             'unique' => true,
             'length' => 30,
             ));
        $this->hasColumn('name', 'string', 128, array(
             'type' => 'string',
             'length' => 128,
             ));
        $this->hasColumn('parent_id', 'integer', 4, array(
             'type' => 'integer',
             'length' => 4,
             ));
        $this->hasColumn('is_active', 'boolean', null, array(
             'type' => 'boolean',
             'default' => 1,
             ));
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasOne('categorie as parent', array(
             'local' => 'parent_id',
             'foreign' => 'id',
             'onDelete' => 'CASCADE'));

        $this->hasMany('categorie as children', array(
             'local' => 'id',
             'foreign' => 'parent_id'));

        $this->hasMany('lienCategorie', array(
             'local' => 'id',
             'foreign' => 'categorie_id'));

        $this->hasMany('articleCategorie', array(
             'local' => 'id',
             'foreign' => 'categorie_id'));

        $this->hasMany('newsletterCategorie', array(
             'local' => 'id',
             'foreign' => 'categorie_id'));

        $i18n0 = new Doctrine_Template_I18n(array(
             'fields' => 
             array(
              0 => 'name',
             ),
             ));
        $sluggable1 = new Doctrine_Template_Sluggable(array(
             'fields' => 
             array(
              0 => 'name',
             ),
             'uniqueBy' => 
             array(
              0 => 'lang',
              1 => 'name',
             ),
             ));
        $i18n0->addChild($sluggable1);
        $this->actAs($i18n0);
    }
}