<?php

/**
 * Basetree
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $id
 * @property string $cost
 * @property Doctrine_Collection $TreeProgramme
 * @property Doctrine_Collection $UserTree
 * 
 * @method integer             getId()            Returns the current record's "id" value
 * @method string              getCost()          Returns the current record's "cost" value
 * @method Doctrine_Collection getTreeProgramme() Returns the current record's "TreeProgramme" collection
 * @method Doctrine_Collection getUserTree()      Returns the current record's "UserTree" collection
 * @method tree                setId()            Sets the current record's "id" value
 * @method tree                setCost()          Sets the current record's "cost" value
 * @method tree                setTreeProgramme() Sets the current record's "TreeProgramme" collection
 * @method tree                setUserTree()      Sets the current record's "UserTree" collection
 * 
 * @package    up2green
 * @subpackage model
 * @author     Your name here
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class Basetree extends sfDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('tree');
        $this->hasColumn('id', 'integer', 4, array(
             'type' => 'integer',
             'primary' => true,
             'autoincrement' => true,
             'length' => 4,
             ));
        $this->hasColumn('cost', 'string', 45, array(
             'type' => 'string',
             'length' => 45,
             ));
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasMany('tree_programme as TreeProgramme', array(
             'local' => 'id',
             'foreign' => 'tree_id'));

        $this->hasMany('user_tree as UserTree', array(
             'local' => 'id',
             'foreign' => 'tree_id'));

        $timestampable0 = new Doctrine_Template_Timestampable(array(
             ));
        $this->actAs($timestampable0);
    }
}