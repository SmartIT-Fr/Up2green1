CREATE TABLE article_translation (id INT, title VARCHAR(255) NOT NULL, accroche VARCHAR(255), description MEDIUMTEXT, lang CHAR(2), slug VARCHAR(255), UNIQUE INDEX article_translation_sluggable_idx (slug, lang, title), PRIMARY KEY(id, lang)) ENGINE = INNODB;
CREATE TABLE article (id INT AUTO_INCREMENT, name VARCHAR(255) NOT NULL, logo VARCHAR(255), is_active TINYINT(1) DEFAULT '0', created_at DATETIME NOT NULL, updated_at DATETIME NOT NULL, PRIMARY KEY(id)) ENGINE = INNODB;
CREATE TABLE article_categorie (categorie_id INT, article_id INT, PRIMARY KEY(categorie_id, article_id)) ENGINE = INNODB;
CREATE TABLE categorie_translation (id INT, name VARCHAR(128) NOT NULL, lang CHAR(2), slug VARCHAR(255), UNIQUE INDEX categorie_translation_sluggable_idx (slug, lang, name), PRIMARY KEY(id, lang)) ENGINE = INNODB;
CREATE TABLE categorie (id INT AUTO_INCREMENT, parent_id INT, is_active TINYINT(1) DEFAULT '1', PRIMARY KEY(id)) ENGINE = INNODB;
CREATE TABLE content (id INT AUTO_INCREMENT, layout_id INT, zone_id INT, module_id INT, created_at DATETIME NOT NULL, updated_at DATETIME NOT NULL, PRIMARY KEY(id, layout_id, zone_id, module_id)) ENGINE = INNODB;
CREATE TABLE coupon (id INT AUTO_INCREMENT, code VARCHAR(128) NOT NULL UNIQUE, credit INT DEFAULT 1 NOT NULL, is_active TINYINT(1) DEFAULT '1', is_used TINYINT(1) DEFAULT '0', used_at DATETIME, used_by INT, created_at DATETIME NOT NULL, updated_at DATETIME NOT NULL, PRIMARY KEY(id)) ENGINE = INNODB;
CREATE TABLE engine (id INT AUTO_INCREMENT, url VARCHAR(128) NOT NULL, html VARCHAR(128) NOT NULL, description VARCHAR(128), remun_type VARCHAR(255), remun_min INT DEFAULT 0 NOT NULL, remun_max INT NOT NULL, rank INT NOT NULL, PRIMARY KEY(id)) ENGINE = INNODB;
CREATE TABLE engine_tag (engine_id INT, tag_id INT, PRIMARY KEY(engine_id, tag_id)) ENGINE = INNODB;
CREATE TABLE layout (id INT AUTO_INCREMENT, name VARCHAR(128) NOT NULL, unique_name VARCHAR(128) NOT NULL UNIQUE, created_at DATETIME NOT NULL, updated_at DATETIME NOT NULL, PRIMARY KEY(id)) ENGINE = INNODB;
CREATE TABLE lien_translation (id INT, title VARCHAR(255) NOT NULL, lang CHAR(2), slug VARCHAR(255), UNIQUE INDEX lien_translation_sluggable_idx (slug, lang, title), PRIMARY KEY(id, lang)) ENGINE = INNODB;
CREATE TABLE lien (id INT AUTO_INCREMENT, src VARCHAR(255), is_active TINYINT(1) DEFAULT '0', created_at DATETIME NOT NULL, updated_at DATETIME NOT NULL, PRIMARY KEY(id)) ENGINE = INNODB;
CREATE TABLE lien_categorie (categorie_id INT, lien_id INT, PRIMARY KEY(categorie_id, lien_id)) ENGINE = INNODB;
CREATE TABLE module (id INT AUTO_INCREMENT, content_id VARCHAR(128) NOT NULL, content_type VARCHAR(255), is_active TINYINT(1) DEFAULT '0', action VARCHAR(128), user_access VARCHAR(128), created_at DATETIME NOT NULL, updated_at DATETIME NOT NULL, PRIMARY KEY(id)) ENGINE = INNODB;
CREATE TABLE newsletter_translation (id INT, title VARCHAR(128), content MEDIUMTEXT, lang CHAR(2), slug VARCHAR(255), UNIQUE INDEX newsletter_translation_sluggable_idx (slug, lang, title), PRIMARY KEY(id, lang)) ENGINE = INNODB;
CREATE TABLE newsletter (id INT AUTO_INCREMENT, reply_to VARCHAR(128) DEFAULT 'noreply@up2green.com' NOT NULL, email_from VARCHAR(128) DEFAULT 'newsletter@up2green.com' NOT NULL, is_forced TINYINT DEFAULT 0 NOT NULL, sent_at DATETIME, created_at DATETIME NOT NULL, updated_at DATETIME NOT NULL, PRIMARY KEY(id)) ENGINE = INNODB;
CREATE TABLE newsletter_categorie (categorie_id INT, newsletter_id INT, PRIMARY KEY(categorie_id, newsletter_id)) ENGINE = INNODB;
CREATE TABLE organisme_translation (id INT, title VARCHAR(128) NOT NULL, accroche VARCHAR(255), description MEDIUMTEXT, lang CHAR(2), slug VARCHAR(255), UNIQUE INDEX organisme_translation_sluggable_idx (slug, lang, title), PRIMARY KEY(id, lang)) ENGINE = INNODB;
CREATE TABLE organisme (id INT AUTO_INCREMENT, name VARCHAR(128) NOT NULL, url VARCHAR(128), logo VARCHAR(128), created_at DATETIME NOT NULL, updated_at DATETIME NOT NULL, PRIMARY KEY(id)) ENGINE = INNODB;
CREATE TABLE partenaire (id INT AUTO_INCREMENT, title VARCHAR(45), accroche VARCHAR(255), description MEDIUMTEXT, url VARCHAR(150), created_at DATETIME NOT NULL, updated_at DATETIME NOT NULL, PRIMARY KEY(id)) ENGINE = INNODB;
CREATE TABLE partenaire_user (partenaire_id INT, user_id INT, PRIMARY KEY(partenaire_id, user_id)) ENGINE = INNODB;
CREATE TABLE profil (id INT AUTO_INCREMENT, user_id INT UNIQUE NOT NULL, credit INT DEFAULT 0 NOT NULL, is_newsletter TINYINT DEFAULT 0 NOT NULL, culture VARCHAR(7) DEFAULT 'fr_FR', INDEX user_id_idx (user_id), PRIMARY KEY(id)) ENGINE = INNODB;
CREATE TABLE programme_translation (id INT, title VARCHAR(128), accroche VARCHAR(255), description MEDIUMTEXT, lang CHAR(2), slug VARCHAR(255), UNIQUE INDEX programme_translation_sluggable_idx (slug, lang, title), PRIMARY KEY(id, lang)) ENGINE = INNODB;
CREATE TABLE programme (id INT AUTO_INCREMENT, organisme_id INT, latitude VARCHAR(45), longitude VARCHAR(45), geoloc VARCHAR(100), is_active TINYINT(1) DEFAULT '1', max_tree INT NOT NULL, created_at DATETIME NOT NULL, updated_at DATETIME NOT NULL, INDEX organisme_id_idx (organisme_id), PRIMARY KEY(id)) ENGINE = INNODB;
CREATE TABLE sf_guard_group (id INT AUTO_INCREMENT, name VARCHAR(255) UNIQUE, description TEXT, created_at DATETIME NOT NULL, updated_at DATETIME NOT NULL, PRIMARY KEY(id)) ENGINE = INNODB;
CREATE TABLE sf_guard_group_permission (group_id INT, permission_id INT, created_at DATETIME NOT NULL, updated_at DATETIME NOT NULL, PRIMARY KEY(group_id, permission_id)) ENGINE = INNODB;
CREATE TABLE sf_guard_permission (id INT AUTO_INCREMENT, name VARCHAR(255) UNIQUE, description TEXT, created_at DATETIME NOT NULL, updated_at DATETIME NOT NULL, PRIMARY KEY(id)) ENGINE = INNODB;
CREATE TABLE sf_guard_remember_key (id INT AUTO_INCREMENT, user_id INT, remember_key VARCHAR(32), ip_address VARCHAR(50), created_at DATETIME NOT NULL, updated_at DATETIME NOT NULL, INDEX user_id_idx (user_id), PRIMARY KEY(id, ip_address)) ENGINE = INNODB;
CREATE TABLE sf_guard_user (id INT AUTO_INCREMENT, username VARCHAR(128) NOT NULL UNIQUE, algorithm VARCHAR(128) DEFAULT 'sha1' NOT NULL, salt VARCHAR(128), password VARCHAR(128), is_active TINYINT(1) DEFAULT '1', is_super_admin TINYINT(1) DEFAULT '0', last_login DATETIME, created_at DATETIME NOT NULL, updated_at DATETIME NOT NULL, INDEX is_active_idx_idx (is_active), PRIMARY KEY(id)) ENGINE = INNODB;
CREATE TABLE sf_guard_user_group (user_id INT, group_id INT, created_at DATETIME NOT NULL, updated_at DATETIME NOT NULL, PRIMARY KEY(user_id, group_id)) ENGINE = INNODB;
CREATE TABLE sf_guard_user_permission (user_id INT, permission_id INT, created_at DATETIME NOT NULL, updated_at DATETIME NOT NULL, PRIMARY KEY(user_id, permission_id)) ENGINE = INNODB;
CREATE TABLE tag (id INT AUTO_INCREMENT, label VARCHAR(255) NOT NULL UNIQUE, rank INT DEFAULT 0 NOT NULL, is_active TINYINT(1) DEFAULT '1', created_at DATETIME NOT NULL, updated_at DATETIME NOT NULL, PRIMARY KEY(id)) ENGINE = INNODB;
CREATE TABLE tree (id INT AUTO_INCREMENT, created_at DATETIME NOT NULL, updated_at DATETIME NOT NULL, PRIMARY KEY(id)) ENGINE = INNODB;
CREATE TABLE tree_programme (programme_id INT, tree_id INT, PRIMARY KEY(programme_id, tree_id)) ENGINE = INNODB;
CREATE TABLE user_coupon (user_id INT, coupon_id INT, PRIMARY KEY(user_id, coupon_id)) ENGINE = INNODB;
CREATE TABLE user_tree (user_id INT, tree_id INT, PRIMARY KEY(user_id, tree_id)) ENGINE = INNODB;
CREATE TABLE zone (id INT AUTO_INCREMENT, name VARCHAR(128) NOT NULL, unique_name VARCHAR(128) NOT NULL UNIQUE, created_at DATETIME NOT NULL, updated_at DATETIME NOT NULL, PRIMARY KEY(id)) ENGINE = INNODB;
ALTER TABLE article_translation ADD CONSTRAINT article_translation_id_article_id FOREIGN KEY (id) REFERENCES article(id) ON UPDATE CASCADE ON DELETE CASCADE;
ALTER TABLE article_categorie ADD CONSTRAINT article_categorie_categorie_id_categorie_id FOREIGN KEY (categorie_id) REFERENCES categorie(id) ON DELETE CASCADE;
ALTER TABLE article_categorie ADD CONSTRAINT article_categorie_article_id_article_id FOREIGN KEY (article_id) REFERENCES article(id) ON DELETE CASCADE;
ALTER TABLE categorie_translation ADD CONSTRAINT categorie_translation_id_categorie_id FOREIGN KEY (id) REFERENCES categorie(id) ON UPDATE CASCADE ON DELETE CASCADE;
ALTER TABLE content ADD CONSTRAINT content_zone_id_zone_id FOREIGN KEY (zone_id) REFERENCES zone(id);
ALTER TABLE content ADD CONSTRAINT content_module_id_module_id FOREIGN KEY (module_id) REFERENCES module(id) ON DELETE CASCADE;
ALTER TABLE content ADD CONSTRAINT content_layout_id_layout_id FOREIGN KEY (layout_id) REFERENCES layout(id);
ALTER TABLE engine_tag ADD CONSTRAINT engine_tag_tag_id_tag_id FOREIGN KEY (tag_id) REFERENCES tag(id) ON DELETE CASCADE;
ALTER TABLE engine_tag ADD CONSTRAINT engine_tag_engine_id_engine_id FOREIGN KEY (engine_id) REFERENCES engine(id) ON DELETE CASCADE;
ALTER TABLE lien_translation ADD CONSTRAINT lien_translation_id_lien_id FOREIGN KEY (id) REFERENCES lien(id) ON UPDATE CASCADE ON DELETE CASCADE;
ALTER TABLE lien_categorie ADD CONSTRAINT lien_categorie_lien_id_lien_id FOREIGN KEY (lien_id) REFERENCES lien(id) ON DELETE CASCADE;
ALTER TABLE lien_categorie ADD CONSTRAINT lien_categorie_categorie_id_categorie_id FOREIGN KEY (categorie_id) REFERENCES categorie(id) ON DELETE CASCADE;
ALTER TABLE newsletter_translation ADD CONSTRAINT newsletter_translation_id_newsletter_id FOREIGN KEY (id) REFERENCES newsletter(id) ON UPDATE CASCADE ON DELETE CASCADE;
ALTER TABLE newsletter_categorie ADD CONSTRAINT newsletter_categorie_newsletter_id_newsletter_id FOREIGN KEY (newsletter_id) REFERENCES newsletter(id) ON DELETE CASCADE;
ALTER TABLE newsletter_categorie ADD CONSTRAINT newsletter_categorie_categorie_id_categorie_id FOREIGN KEY (categorie_id) REFERENCES categorie(id) ON DELETE CASCADE;
ALTER TABLE organisme_translation ADD CONSTRAINT organisme_translation_id_organisme_id FOREIGN KEY (id) REFERENCES organisme(id) ON UPDATE CASCADE ON DELETE CASCADE;
ALTER TABLE partenaire_user ADD CONSTRAINT partenaire_user_user_id_sf_guard_user_id FOREIGN KEY (user_id) REFERENCES sf_guard_user(id);
ALTER TABLE partenaire_user ADD CONSTRAINT partenaire_user_partenaire_id_partenaire_id FOREIGN KEY (partenaire_id) REFERENCES partenaire(id);
ALTER TABLE profil ADD CONSTRAINT profil_user_id_sf_guard_user_id FOREIGN KEY (user_id) REFERENCES sf_guard_user(id) ON DELETE CASCADE;
ALTER TABLE programme_translation ADD CONSTRAINT programme_translation_id_programme_id FOREIGN KEY (id) REFERENCES programme(id) ON UPDATE CASCADE ON DELETE CASCADE;
ALTER TABLE programme ADD CONSTRAINT programme_organisme_id_organisme_id FOREIGN KEY (organisme_id) REFERENCES organisme(id);
ALTER TABLE sf_guard_group_permission ADD CONSTRAINT sf_guard_group_permission_permission_id_sf_guard_permission_id FOREIGN KEY (permission_id) REFERENCES sf_guard_permission(id) ON DELETE CASCADE;
ALTER TABLE sf_guard_group_permission ADD CONSTRAINT sf_guard_group_permission_group_id_sf_guard_group_id FOREIGN KEY (group_id) REFERENCES sf_guard_group(id) ON DELETE CASCADE;
ALTER TABLE sf_guard_remember_key ADD CONSTRAINT sf_guard_remember_key_user_id_sf_guard_user_id FOREIGN KEY (user_id) REFERENCES sf_guard_user(id) ON DELETE CASCADE;
ALTER TABLE sf_guard_user_group ADD CONSTRAINT sf_guard_user_group_user_id_sf_guard_user_id FOREIGN KEY (user_id) REFERENCES sf_guard_user(id) ON DELETE CASCADE;
ALTER TABLE sf_guard_user_group ADD CONSTRAINT sf_guard_user_group_group_id_sf_guard_group_id FOREIGN KEY (group_id) REFERENCES sf_guard_group(id) ON DELETE CASCADE;
ALTER TABLE sf_guard_user_permission ADD CONSTRAINT sf_guard_user_permission_user_id_sf_guard_user_id FOREIGN KEY (user_id) REFERENCES sf_guard_user(id) ON DELETE CASCADE;
ALTER TABLE sf_guard_user_permission ADD CONSTRAINT sf_guard_user_permission_permission_id_sf_guard_permission_id FOREIGN KEY (permission_id) REFERENCES sf_guard_permission(id) ON DELETE CASCADE;
ALTER TABLE tree_programme ADD CONSTRAINT tree_programme_tree_id_tree_id FOREIGN KEY (tree_id) REFERENCES tree(id);
ALTER TABLE tree_programme ADD CONSTRAINT tree_programme_programme_id_programme_id FOREIGN KEY (programme_id) REFERENCES programme(id);
ALTER TABLE user_coupon ADD CONSTRAINT user_coupon_user_id_sf_guard_user_id FOREIGN KEY (user_id) REFERENCES sf_guard_user(id) ON DELETE CASCADE;
ALTER TABLE user_coupon ADD CONSTRAINT user_coupon_coupon_id_coupon_id FOREIGN KEY (coupon_id) REFERENCES coupon(id);
ALTER TABLE user_tree ADD CONSTRAINT user_tree_user_id_sf_guard_user_id FOREIGN KEY (user_id) REFERENCES sf_guard_user(id) ON DELETE CASCADE;
ALTER TABLE user_tree ADD CONSTRAINT user_tree_tree_id_tree_id FOREIGN KEY (tree_id) REFERENCES tree(id);
