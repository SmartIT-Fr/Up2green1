CREATE TABLE affiliate_plateforme (id INT AUTO_INCREMENT, unique_name VARCHAR(30) UNIQUE, created_at DATETIME NOT NULL, updated_at DATETIME NOT NULL, PRIMARY KEY(id)) ENGINE = INNODB;
CREATE TABLE article_translation (id INT, title VARCHAR(255) NOT NULL, accroche TEXT, description MEDIUMTEXT, lang CHAR(2), slug VARCHAR(255), UNIQUE INDEX article_translation_sluggable_idx (slug, lang, title), PRIMARY KEY(id, lang)) ENGINE = INNODB;
CREATE TABLE article (id INT AUTO_INCREMENT, category_id INT, logo VARCHAR(255), is_active TINYINT(1) DEFAULT '0', rank INT DEFAULT 1 NOT NULL, created_at DATETIME NOT NULL, updated_at DATETIME NOT NULL, INDEX category_id_idx (category_id), PRIMARY KEY(id)) ENGINE = INNODB;
CREATE TABLE category (id INT AUTO_INCREMENT, unique_name VARCHAR(30) UNIQUE, rank INT DEFAULT 1 NOT NULL, is_active TINYINT(1) DEFAULT '1', root_id BIGINT, lft INT, rgt INT, level SMALLINT, PRIMARY KEY(id)) ENGINE = INNODB;
CREATE TABLE content (id INT AUTO_INCREMENT, layout_id INT, zone_id INT, module_id INT, created_at DATETIME NOT NULL, updated_at DATETIME NOT NULL, PRIMARY KEY(id, layout_id, zone_id, module_id)) ENGINE = INNODB;
CREATE TABLE coupon (id INT AUTO_INCREMENT, gen_id INT NOT NULL, code VARCHAR(128) NOT NULL UNIQUE, is_active TINYINT(1) DEFAULT '1', used_at DATETIME, used_by INT, created_at DATETIME NOT NULL, updated_at DATETIME NOT NULL, INDEX gen_id_idx (gen_id), PRIMARY KEY(id)) ENGINE = INNODB;
CREATE TABLE coupon_gen (id INT AUTO_INCREMENT, prix FLOAT(18, 2) NOT NULL, credit INT NOT NULL, created_at DATETIME NOT NULL, updated_at DATETIME NOT NULL, PRIMARY KEY(id)) ENGINE = INNODB;
CREATE TABLE coupon_partenaire (coupon_id INT, partenaire_id INT, PRIMARY KEY(coupon_id, partenaire_id)) ENGINE = INNODB;
CREATE TABLE coupon_user (coupon_id INT, user_id bigint(20), PRIMARY KEY(coupon_id, user_id)) ENGINE = INNODB;
CREATE TABLE devise (id INT AUTO_INCREMENT, unique_name VARCHAR(30) UNIQUE, conversion DOUBLE(18, 10) NOT NULL, created_at DATETIME NOT NULL, updated_at DATETIME NOT NULL, PRIMARY KEY(id)) ENGINE = INNODB;
CREATE TABLE engine (id INT AUTO_INCREMENT, id_category INT NOT NULL, id_plateforme INT NOT NULL, id_devise INT NOT NULL, site_display VARCHAR(128) NOT NULL, site_url VARCHAR(128) NOT NULL, html LONGTEXT, logo LONGTEXT, description LONGTEXT, remun_type VARCHAR(255) DEFAULT 'number', remun_min FLOAT(18, 2) DEFAULT 0 NOT NULL, remun_max FLOAT(18, 2) NOT NULL, safe_search_only TINYINT(1) DEFAULT '0', is_active TINYINT(1) DEFAULT '1', created_at DATETIME NOT NULL, updated_at DATETIME NOT NULL, INDEX id_devise_idx (id_devise), INDEX id_plateforme_idx (id_plateforme), INDEX id_category_idx (id_category), PRIMARY KEY(id)) ENGINE = INNODB;
CREATE TABLE engine_tag (engine_id INT, tag_id INT, PRIMARY KEY(engine_id, tag_id)) ENGINE = INNODB;
CREATE TABLE layout (id INT AUTO_INCREMENT, name VARCHAR(128) NOT NULL, unique_name VARCHAR(128) NOT NULL UNIQUE, created_at DATETIME NOT NULL, updated_at DATETIME NOT NULL, PRIMARY KEY(id)) ENGINE = INNODB;
CREATE TABLE lien_translation (id INT, title VARCHAR(255) NOT NULL, lang CHAR(2), slug VARCHAR(255), UNIQUE INDEX lien_translation_sluggable_idx (slug, lang, title), PRIMARY KEY(id, lang)) ENGINE = INNODB;
CREATE TABLE lien (id INT AUTO_INCREMENT, category_id INT, src VARCHAR(255), is_active TINYINT(1) DEFAULT '0', rank INT DEFAULT 1 NOT NULL, created_at DATETIME NOT NULL, updated_at DATETIME NOT NULL, INDEX category_id_idx (category_id), PRIMARY KEY(id)) ENGINE = INNODB;
CREATE TABLE log_coupon (id INT AUTO_INCREMENT, ip VARCHAR(15) NOT NULL, email VARCHAR(50), coupon_id INT UNIQUE NOT NULL, created_at DATETIME NOT NULL, updated_at DATETIME NOT NULL, INDEX coupon_id_idx (coupon_id), PRIMARY KEY(id)) ENGINE = INNODB;
CREATE TABLE log_pub (id INT AUTO_INCREMENT, user_id bigint(20), ip VARCHAR(15) NOT NULL, url LONGTEXT NOT NULL, created_at DATETIME NOT NULL, updated_at DATETIME NOT NULL, INDEX user_id_idx (user_id), PRIMARY KEY(id)) ENGINE = INNODB;
CREATE TABLE module (id INT AUTO_INCREMENT, content_id VARCHAR(128) NOT NULL, content_type VARCHAR(255), is_active TINYINT(1) DEFAULT '0', action VARCHAR(128), user_access VARCHAR(128), created_at DATETIME NOT NULL, updated_at DATETIME NOT NULL, PRIMARY KEY(id)) ENGINE = INNODB;
CREATE TABLE newsletter_translation (id INT, title VARCHAR(255) NOT NULL, content MEDIUMTEXT, lang CHAR(2), slug VARCHAR(255), UNIQUE INDEX newsletter_translation_sluggable_idx (slug, lang, title), PRIMARY KEY(id, lang)) ENGINE = INNODB;
CREATE TABLE newsletter (id INT AUTO_INCREMENT, category_id INT, reply_to VARCHAR(128) DEFAULT 'noreply@up2green.com' NOT NULL, email_from VARCHAR(128) DEFAULT 'newsletter@up2green.com' NOT NULL, is_forced TINYINT(1) DEFAULT '0', sent_at DATETIME, created_at DATETIME NOT NULL, updated_at DATETIME NOT NULL, INDEX category_id_idx (category_id), PRIMARY KEY(id)) ENGINE = INNODB;
CREATE TABLE organisme_translation (id INT, title VARCHAR(128), accroche TEXT, description MEDIUMTEXT, lang CHAR(2), slug VARCHAR(255), UNIQUE INDEX organisme_translation_sluggable_idx (slug, lang, title), PRIMARY KEY(id, lang)) ENGINE = INNODB;
CREATE TABLE organisme (id INT AUTO_INCREMENT, url VARCHAR(128), logo VARCHAR(128), created_at DATETIME NOT NULL, updated_at DATETIME NOT NULL, PRIMARY KEY(id)) ENGINE = INNODB;
CREATE TABLE partenaire (id INT AUTO_INCREMENT, user_id bigint(20) NOT NULL UNIQUE, logo VARCHAR(128), title VARCHAR(45), accroche TEXT, description MEDIUMTEXT, url VARCHAR(150), created_at DATETIME NOT NULL, updated_at DATETIME NOT NULL, INDEX user_id_idx (user_id), PRIMARY KEY(id)) ENGINE = INNODB;
CREATE TABLE partenaire_programme (partenaire_id INT, programme_id INT, PRIMARY KEY(partenaire_id, programme_id)) ENGINE = INNODB;
CREATE TABLE profil (id INT AUTO_INCREMENT, user_id bigint(20) NOT NULL UNIQUE, credit FLOAT(18, 4) DEFAULT 0 NOT NULL, is_newsletter TINYINT DEFAULT 0 NOT NULL, culture VARCHAR(7) DEFAULT 'fr_FR', INDEX user_id_idx (user_id), PRIMARY KEY(id)) ENGINE = INNODB;
CREATE TABLE programme_translation (id INT, title VARCHAR(128), accroche TEXT, description MEDIUMTEXT, lang CHAR(2), slug VARCHAR(255), UNIQUE INDEX programme_translation_sluggable_idx (slug, lang, title), PRIMARY KEY(id, lang)) ENGINE = INNODB;
CREATE TABLE programme (id INT AUTO_INCREMENT, organisme_id INT, geoadress VARCHAR(255), latitude DECIMAL(18, 6), longitude DECIMAL(18, 6), is_active TINYINT(1) DEFAULT '1', max_tree INT NOT NULL, logo VARCHAR(128), created_at DATETIME NOT NULL, updated_at DATETIME NOT NULL, INDEX organisme_id_idx (organisme_id), PRIMARY KEY(id)) ENGINE = INNODB;
CREATE TABLE sf_guard_forgot_password (id BIGINT AUTO_INCREMENT, user_id BIGINT NOT NULL, unique_key VARCHAR(255), expires_at DATETIME NOT NULL, created_at DATETIME NOT NULL, updated_at DATETIME NOT NULL, INDEX user_id_idx (user_id), PRIMARY KEY(id)) ENGINE = INNODB;
CREATE TABLE sf_guard_group (id BIGINT AUTO_INCREMENT, name VARCHAR(255) UNIQUE, description TEXT, created_at DATETIME NOT NULL, updated_at DATETIME NOT NULL, PRIMARY KEY(id)) ENGINE = INNODB;
CREATE TABLE sf_guard_group_permission (group_id BIGINT, permission_id BIGINT, created_at DATETIME NOT NULL, updated_at DATETIME NOT NULL, PRIMARY KEY(group_id, permission_id)) ENGINE = INNODB;
CREATE TABLE sf_guard_permission (id BIGINT AUTO_INCREMENT, name VARCHAR(255) UNIQUE, description TEXT, created_at DATETIME NOT NULL, updated_at DATETIME NOT NULL, PRIMARY KEY(id)) ENGINE = INNODB;
CREATE TABLE sf_guard_remember_key (id BIGINT AUTO_INCREMENT, user_id BIGINT, remember_key VARCHAR(32), ip_address VARCHAR(50), created_at DATETIME NOT NULL, updated_at DATETIME NOT NULL, INDEX user_id_idx (user_id), PRIMARY KEY(id)) ENGINE = INNODB;
CREATE TABLE sf_guard_user (id BIGINT AUTO_INCREMENT, first_name VARCHAR(255), last_name VARCHAR(255), email_address VARCHAR(255) NOT NULL UNIQUE, username VARCHAR(128) NOT NULL UNIQUE, algorithm VARCHAR(128) DEFAULT 'sha1' NOT NULL, salt VARCHAR(128), password VARCHAR(128), is_active TINYINT(1) DEFAULT '1', is_super_admin TINYINT(1) DEFAULT '0', last_login DATETIME, created_at DATETIME NOT NULL, updated_at DATETIME NOT NULL, INDEX is_active_idx_idx (is_active), PRIMARY KEY(id)) ENGINE = INNODB;
CREATE TABLE sf_guard_user_group (user_id BIGINT, group_id BIGINT, created_at DATETIME NOT NULL, updated_at DATETIME NOT NULL, PRIMARY KEY(user_id, group_id)) ENGINE = INNODB;
CREATE TABLE sf_guard_user_permission (user_id BIGINT, permission_id BIGINT, created_at DATETIME NOT NULL, updated_at DATETIME NOT NULL, PRIMARY KEY(user_id, permission_id)) ENGINE = INNODB;
CREATE TABLE tag (id INT AUTO_INCREMENT, label VARCHAR(255) NOT NULL UNIQUE, rank INT DEFAULT 0 NOT NULL, is_active TINYINT(1) DEFAULT '1', created_at DATETIME NOT NULL, updated_at DATETIME NOT NULL, PRIMARY KEY(id)) ENGINE = INNODB;
CREATE TABLE tree (id INT AUTO_INCREMENT, programme_id INT NOT NULL, created_at DATETIME NOT NULL, updated_at DATETIME NOT NULL, INDEX programme_id_idx (programme_id), PRIMARY KEY(id)) ENGINE = INNODB;
CREATE TABLE tree_coupon (tree_id INT, coupon_id INT, PRIMARY KEY(tree_id, coupon_id)) ENGINE = INNODB;
CREATE TABLE tree_user (tree_id INT, user_id bigint(20), PRIMARY KEY(tree_id, user_id)) ENGINE = INNODB;
CREATE TABLE zone (id INT AUTO_INCREMENT, name VARCHAR(128) NOT NULL, unique_name VARCHAR(128) NOT NULL UNIQUE, created_at DATETIME NOT NULL, updated_at DATETIME NOT NULL, PRIMARY KEY(id)) ENGINE = INNODB;
ALTER TABLE article_translation ADD CONSTRAINT article_translation_id_article_id FOREIGN KEY (id) REFERENCES article(id) ON UPDATE CASCADE ON DELETE CASCADE;
ALTER TABLE article ADD CONSTRAINT article_category_id_category_id FOREIGN KEY (category_id) REFERENCES category(id);
ALTER TABLE content ADD CONSTRAINT content_zone_id_zone_id FOREIGN KEY (zone_id) REFERENCES zone(id);
ALTER TABLE content ADD CONSTRAINT content_module_id_module_id FOREIGN KEY (module_id) REFERENCES module(id) ON DELETE CASCADE;
ALTER TABLE content ADD CONSTRAINT content_layout_id_layout_id FOREIGN KEY (layout_id) REFERENCES layout(id);
ALTER TABLE coupon ADD CONSTRAINT coupon_gen_id_coupon_gen_id FOREIGN KEY (gen_id) REFERENCES coupon_gen(id);
ALTER TABLE coupon_partenaire ADD CONSTRAINT coupon_partenaire_partenaire_id_partenaire_id FOREIGN KEY (partenaire_id) REFERENCES partenaire(id);
ALTER TABLE coupon_partenaire ADD CONSTRAINT coupon_partenaire_coupon_id_coupon_id FOREIGN KEY (coupon_id) REFERENCES coupon(id) ON DELETE CASCADE;
ALTER TABLE coupon_user ADD CONSTRAINT coupon_user_user_id_sf_guard_user_id FOREIGN KEY (user_id) REFERENCES sf_guard_user(id);
ALTER TABLE coupon_user ADD CONSTRAINT coupon_user_coupon_id_coupon_id FOREIGN KEY (coupon_id) REFERENCES coupon(id);
ALTER TABLE engine ADD CONSTRAINT engine_id_plateforme_affiliate_plateforme_id FOREIGN KEY (id_plateforme) REFERENCES affiliate_plateforme(id);
ALTER TABLE engine ADD CONSTRAINT engine_id_devise_devise_id FOREIGN KEY (id_devise) REFERENCES devise(id);
ALTER TABLE engine ADD CONSTRAINT engine_id_category_category_id FOREIGN KEY (id_category) REFERENCES category(id);
ALTER TABLE engine_tag ADD CONSTRAINT engine_tag_tag_id_tag_id FOREIGN KEY (tag_id) REFERENCES tag(id) ON DELETE CASCADE;
ALTER TABLE engine_tag ADD CONSTRAINT engine_tag_engine_id_engine_id FOREIGN KEY (engine_id) REFERENCES engine(id) ON DELETE CASCADE;
ALTER TABLE lien_translation ADD CONSTRAINT lien_translation_id_lien_id FOREIGN KEY (id) REFERENCES lien(id) ON UPDATE CASCADE ON DELETE CASCADE;
ALTER TABLE lien ADD CONSTRAINT lien_category_id_category_id FOREIGN KEY (category_id) REFERENCES category(id);
ALTER TABLE log_coupon ADD CONSTRAINT log_coupon_coupon_id_coupon_id FOREIGN KEY (coupon_id) REFERENCES coupon(id);
ALTER TABLE log_pub ADD CONSTRAINT log_pub_user_id_sf_guard_user_id FOREIGN KEY (user_id) REFERENCES sf_guard_user(id);
ALTER TABLE newsletter_translation ADD CONSTRAINT newsletter_translation_id_newsletter_id FOREIGN KEY (id) REFERENCES newsletter(id) ON UPDATE CASCADE ON DELETE CASCADE;
ALTER TABLE newsletter ADD CONSTRAINT newsletter_category_id_category_id FOREIGN KEY (category_id) REFERENCES category(id);
ALTER TABLE organisme_translation ADD CONSTRAINT organisme_translation_id_organisme_id FOREIGN KEY (id) REFERENCES organisme(id) ON UPDATE CASCADE ON DELETE CASCADE;
ALTER TABLE partenaire ADD CONSTRAINT partenaire_user_id_sf_guard_user_id FOREIGN KEY (user_id) REFERENCES sf_guard_user(id) ON DELETE CASCADE;
ALTER TABLE partenaire_programme ADD CONSTRAINT partenaire_programme_programme_id_programme_id FOREIGN KEY (programme_id) REFERENCES programme(id) ON DELETE CASCADE;
ALTER TABLE partenaire_programme ADD CONSTRAINT partenaire_programme_partenaire_id_partenaire_id FOREIGN KEY (partenaire_id) REFERENCES partenaire(id) ON DELETE CASCADE;
ALTER TABLE profil ADD CONSTRAINT profil_user_id_sf_guard_user_id FOREIGN KEY (user_id) REFERENCES sf_guard_user(id) ON DELETE CASCADE;
ALTER TABLE programme_translation ADD CONSTRAINT programme_translation_id_programme_id FOREIGN KEY (id) REFERENCES programme(id) ON UPDATE CASCADE ON DELETE CASCADE;
ALTER TABLE programme ADD CONSTRAINT programme_organisme_id_organisme_id FOREIGN KEY (organisme_id) REFERENCES organisme(id);
ALTER TABLE sf_guard_forgot_password ADD CONSTRAINT sf_guard_forgot_password_user_id_sf_guard_user_id FOREIGN KEY (user_id) REFERENCES sf_guard_user(id) ON DELETE CASCADE;
ALTER TABLE sf_guard_group_permission ADD CONSTRAINT sf_guard_group_permission_permission_id_sf_guard_permission_id FOREIGN KEY (permission_id) REFERENCES sf_guard_permission(id) ON DELETE CASCADE;
ALTER TABLE sf_guard_group_permission ADD CONSTRAINT sf_guard_group_permission_group_id_sf_guard_group_id FOREIGN KEY (group_id) REFERENCES sf_guard_group(id) ON DELETE CASCADE;
ALTER TABLE sf_guard_remember_key ADD CONSTRAINT sf_guard_remember_key_user_id_sf_guard_user_id FOREIGN KEY (user_id) REFERENCES sf_guard_user(id) ON DELETE CASCADE;
ALTER TABLE sf_guard_user_group ADD CONSTRAINT sf_guard_user_group_user_id_sf_guard_user_id FOREIGN KEY (user_id) REFERENCES sf_guard_user(id) ON DELETE CASCADE;
ALTER TABLE sf_guard_user_group ADD CONSTRAINT sf_guard_user_group_group_id_sf_guard_group_id FOREIGN KEY (group_id) REFERENCES sf_guard_group(id) ON DELETE CASCADE;
ALTER TABLE sf_guard_user_permission ADD CONSTRAINT sf_guard_user_permission_user_id_sf_guard_user_id FOREIGN KEY (user_id) REFERENCES sf_guard_user(id) ON DELETE CASCADE;
ALTER TABLE sf_guard_user_permission ADD CONSTRAINT sf_guard_user_permission_permission_id_sf_guard_permission_id FOREIGN KEY (permission_id) REFERENCES sf_guard_permission(id) ON DELETE CASCADE;
ALTER TABLE tree ADD CONSTRAINT tree_programme_id_programme_id FOREIGN KEY (programme_id) REFERENCES programme(id);
ALTER TABLE tree_coupon ADD CONSTRAINT tree_coupon_tree_id_tree_id FOREIGN KEY (tree_id) REFERENCES tree(id) ON DELETE CASCADE;
ALTER TABLE tree_coupon ADD CONSTRAINT tree_coupon_coupon_id_coupon_id FOREIGN KEY (coupon_id) REFERENCES coupon(id);
ALTER TABLE tree_user ADD CONSTRAINT tree_user_user_id_sf_guard_user_id FOREIGN KEY (user_id) REFERENCES sf_guard_user(id);
ALTER TABLE tree_user ADD CONSTRAINT tree_user_tree_id_tree_id FOREIGN KEY (tree_id) REFERENCES tree(id) ON DELETE CASCADE;
